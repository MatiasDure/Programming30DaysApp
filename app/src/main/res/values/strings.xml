<resources>
    <string name="app_name">30DayApp</string>
    <string name="activity_title_1">Set Up Your Development Environment</string>
    <string name="activity_description_1">Install a code editor like VS Code or Sublime Text, set up a version control system like Git, and ensure you have a terminal/command prompt configured for your operating system.</string>
    <string name="activity_title_2">Learn Basic Command Line Operations</string>
    <string name="activity_description_2">Spend time learning how to navigate directories, create and delete files, and perform basic operations using the terminal or command prompt.</string>
    <string name="activity_title_3">Complete a &quot;Hello World&quot; Program</string>
    <string name="activity_description_3">Write and run a simple &quot;Hello World&quot; program in a programming language of your choice. Understand how to compile or interpret your code if necessary.</string>
    <string name="activity_title_4">Understand Basic Data Types</string>
    <string name="activity_description_4">Study basic data types like integers, floats, strings, and booleans. Write simple programs that use these data types.</string>
    <string name="activity_title_5">Practice Variables and Assignment</string>
    <string name="activity_description_5">Write programs that involve creating, assigning, and manipulating variables. Understand how to store and update values in memory.</string>
    <string name="activity_title_6">Learn About Conditional Statements</string>
    <string name="activity_description_6">Explore if-else statements and boolean logic. Write programs that execute different code blocks based on certain conditions.</string>
    <string name="activity_title_7">Experiment with Loops</string>
    <string name="activity_description_7">Study for-loops and while-loops. Write programs that perform repetitive tasks or iterate over collections of data.</string>
    <string name="activity_title_8">Write Your First Function</string>
    <string name="activity_description_8">Create a simple function that performs a specific task, like adding two numbers. Understand the concepts of input parameters and return values.</string>
    <string name="activity_title_9">Get Comfortable with Debugging</string>
    <string name="activity_description_9">Learn how to use debugging tools in your IDE or through the command line. Practice setting breakpoints, stepping through code, and examining variables.</string>
    <string name="activity_title_10">Work with Lists/Arrays</string>
    <string name="activity_description_10">Explore how to create, modify, and iterate over lists or arrays. Write programs that perform operations like sorting or filtering elements.</string>
    <string name="activity_title_11">Understand Basic Algorithms</string>
    <string name="activity_description_11">Study basic algorithms like searching and sorting (e.g., binary search, bubble sort). Implement these algorithms in your chosen language.</string>
    <string name="activity_title_12">Explore String Manipulation</string>
    <string name="activity_description_12">Practice working with strings, including concatenation, slicing, and formatting. Write programs that process text input and generate output.</string>
    <string name="activity_title_13">Learn About File I/O</string>
    <string name="activity_description_13">Write programs that read from and write to files. Understand how to handle file paths, open and close files, and process file content.</string>
    <string name="activity_title_14">Study Object-Oriented Programming (OOP) Basics</string>
    <string name="activity_description_14">Learn about classes, objects, inheritance, and encapsulation. Write simple programs that define and use custom classes.</string>
    <string name="activity_title_15">Build a Simple Calculator</string>
    <string name="activity_description_15">Create a program that performs basic arithmetic operations like addition, subtraction, multiplication, and division. Use functions to organize your code.</string>
    <string name="activity_title_16">Learn About Recursion</string>
    <string name="activity_description_16">Understand the concept of recursive functions. Write programs that solve problems using recursion, like calculating factorials or solving the Fibonacci sequence.</string>
    <string name="activity_title_17">Explore Data Structures</string>
    <string name="activity_description_17">Study common data structures like stacks, queues, and linked lists. Implement these data structures and understand their use cases.</string>
    <string name="activity_title_18">Understand Exception Handling</string>
    <string name="activity_description_18">Learn how to handle errors and exceptions in your code. Practice writing programs that gracefully handle different types of runtime errors.</string>
    <string name="activity_title_19">Work on a Small Project</string>
    <string name="activity_description_19">Choose a simple project, like a to-do list or a personal diary app, and build it from scratch. Apply the concepts you&#39;ve learned so far.</string>
    <string name="activity_title_20">Version Control with Git</string>
    <string name="activity_description_20">Learn how to use Git for version control. Practice creating repositories, committing changes, branching, and merging code.</string>
    <string name="activity_title_21">Understand Algorithm Complexity</string>
    <string name="activity_description_21">Study Big O notation and the complexity of algorithms. Analyze the performance of your code and optimize it where necessary.</string>
    <string name="activity_title_22">Explore a Web Framework</string>
    <string name="activity_description_22">Learn the basics of a web framework like Flask (Python), Express (JavaScript), or Django. Build a simple web application.</string>
    <string name="activity_title_23">Learn About APIs</string>
    <string name="activity_description_23">Understand how APIs work and how to consume them in your code. Practice sending HTTP requests and handling responses.</string>
    <string name="activity_title_24">Work with Databases</string>
    <string name="activity_description_24">Learn the basics of SQL and how to interact with a relational database. Practice creating tables, inserting data, and running queries.</string>
    <string name="activity_title_25">Understand Asynchronous Programming</string>
    <string name="activity_description_25">Study the concept of asynchronous programming. Write programs that use async/await (or equivalent) to perform non-blocking operations.</string>
    <string name="activity_title_26">Explore Testing and Test-Driven Development (TDD)</string>
    <string name="activity_description_26">Learn how to write unit tests and integrate them into your development process. Practice Test-Driven Development by writing tests before implementing your code.</string>
    <string name="activity_title_27">Contribute to an Open Source Project</string>
    <string name="activity_description_27">Find an open source project that interests you and contribute to it. Start with small tasks like fixing bugs or improving documentation.</string>
    <string name="activity_title_28">Learn About Software Design Patterns</string>
    <string name="activity_description_28">Study common design patterns like Singleton, Observer, and Factory. Implement these patterns in small programs to understand their use cases.</string>
    <string name="activity_title_29">Participate in Coding Challenges</string>
    <string name="activity_description_29">Join coding challenge platforms like LeetCode, HackerRank, or Codewars. Regularly solve problems to improve your algorithmic thinking and coding skills.</string>
    <string name="activity_title_30">Build a Comprehensive Project</string>
    <string name="activity_description_30">Plan and develop a larger, more complex project that incorporates multiple skills you&#39;ve learned. Focus on code organization, performance, and scalability.</string>
</resources>